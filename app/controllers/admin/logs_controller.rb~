module Admin
  class LogsController < BaseController
    before_action :set_log, only: [:show, :edit, :update, :destroy]

    # GET /logs
    # GET /logs.json
    def index
      @logs ||= Log.where(device_id: selected_device)
    end

    # GET /logs/1
    # GET /logs/1.json
    def show
    end

    # GET /logs/new
    def new
      @log = Log.new
    end

    # GET /logs/1/edit
    def edit
    end

    # POST /logs
    # POST /logs.json
    def create
      @log = Log.new(log_params)

      respond_to do |format|
        if @log.save
          format.html { redirect_to admin_log_path(@log), notice: 'Log was successfully created.' }
#          format.json { render action: 'show', status: :created, location: @log }
          format.json {render :json => { :success => :created}}
        else
          format.html { render action: 'new' }
#          format.json { render json: @log.errors, status: :unprocessable_entity }
          format.json { render :json => {:errors => @log.errors, :success => :failed}, status: :unprocessable_entity }
        end
      end
    end

    # PATCH/PUT /logs/1
    # PATCH/PUT /logs/1.json
    def update
      respond_to do |format|
        if @log.update(log_params)
          format.html { redirect_to admin_log_path(@log), notice: 'Log was successfully updated.' }
          format.json { head :no_content }
        else
          format.html { render action: 'edit' }
          format.json { render json: @log.errors, status: :unprocessable_entity }
        end
      end
    end

    # DELETE /logs/1
    # DELETE /logs/1.json
    def destroy
      @log.destroy
      respond_to do |format|
        format.html { redirect_to admin_logs_url }
        format.json { head :no_content }
      end
    end

    private
      # Use callbacks to share common setup or constraints between actions.
      def set_log
        @log = Log.find(params[:id])
      end

      # Never trust parameters from the scary internet, only allow the white list through.
      def log_params
        params.require(:log).permit(:uniqid, :contact_id, :log_type, :time, :duration, :device_id, :device_imei)
      end
  end
end

